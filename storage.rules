service firebase.storage {
	function isAuthenticated() {
  	return request.auth.uid != null;
  }

  function isOwner(userId) {
    return request.auth.uid == userId;
  }

  function hasRole(role) {
  	return role in request.auth.token.roles;
  }

  function isAdmin() {
  	return hasRole('admin');
  }

  function isPremium() {
  	return hasRole('premium');
  }

  function isAuthorized(userId) {
    return isOwner(userId) || isAdmin();
  }

  function isAvatarValid() {
  	return (
    	request.resource.contentType.matches('image/.*') &&
      request.resource.size <= 20 * 1024 * 1024 &&
      (resource == null || request.resource.md5Hash != resource.md5Hash)
    );
  }

  match /b/{bucket}/o {
    match /images {
    	match /avatars/{userId} {
        allow get: if isAuthenticated();
        allow list: if isAuthenticated() && isAdmin();
      }

      match /avatars/{userId} {
        allow create: if isAuthenticated() && isAuthorized(userId) && isAvatarValid();
        allow update: if isAuthenticated() && isAuthorized(userId) && isAvatarValid();
        allow delete: if isAuthenticated() && isAuthorized(userId);
      }
    }
  }
}
