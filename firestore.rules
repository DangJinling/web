service cloud.firestore {
  function isOwner(userId) {
    return (request.auth.uid == userId);
  }

  function hasRole(role) {
  	return (role in request.auth.token.roles);
  }

  function isAdmin() {
  	return hasRole('admin');
  }

  function isPremium() {
  	return hasRole('premium');
  }

  function authorized(userId) {
    return (request.auth.uid != null && (isOwner(userId) || isAdmin()));
  }

  function isUsernameValid(username) {
    return (username.size() >= 2 && username.size() <= 20);
  }

  match /databases/{database}/documents {
    match /users/{userId} {
      allow get: if request.auth.uid != null;
      allow list: if request.auth.uid != null;

      allow create: if authorized(userId);

      allow update: if authorized(userId) && isUsernameValid(request.resource.data.username);

      allow delete: if authorized(userId);
    }
  }
}
